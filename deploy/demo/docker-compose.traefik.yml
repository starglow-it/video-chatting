version: "3.8"

services:
  traefik:
    build: ./traefik
    container_name: traefik
    restart: always
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /data/letsencrypt:/letsencrypt
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:9090:9090"
    networks:
      - traefikpublic

  instance-proxy:
    container_name: instance_proxy
    build:
      context: ../../services/instance-proxy
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "7000:7000"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=liveoffice_traefikpublic"
      - "traefik.http.routers.proxy.rule=HostRegexp(`{subdomain:.+}.scaling.demo.theliveoffice.com`)"
      - "traefik.http.routers.proxy.entrypoints=https"
      - "traefik.http.routers.proxy.tls.certresolver=wildcard-resolver"
      - "traefik.http.routers.whoami.tls.domains[0].main=scaling.demo.theliveoffice.com"
      - "traefik.http.routers.whoami.tls.domains[0].sans=*.scaling.demo.theliveoffice.com"
      - "traefik.http.services.proxy.loadbalancer.server.port=7000"
      - "io.portainer.accesscontrol.public"
    networks:
      - traefikpublic

#  whoami:
#    image: "traefik/whoami"
#    restart: always
#    labels:
#      - traefik.enable=true
#      - traefik.docker.network=liveoffice_traefikpublic
#      - traefik.http.routers.whoami.rule="HostRegexp(`{subdomain:.+}.demo.theliveoffice.com`) && PathPrefix(`/whoami`)"
#      - traefik.http.routers.whoami.entrypoints=https
#      - traefik.http.routers.whoami.tls.certresolver=wildcard-resolver
#      - traefik.http.routers.whoami.tls.domains[1].main=demo.theliveoffice.com
#      - traefik.http.routers.whoami.tls.domains[1].sans=*.demo.theliveoffice.com
#      - traefik.http.services.whoami.loadbalancer.server.port=80
#    networks:
#      - traefikpublic

networks:
  traefikpublic: