version: "3.7"

networks:
  liveoffice_instance:

services:
  mongo:
    ports:
      - '127.0.0.1:56100:27017'
    volumes:
      - /data/liveoffice/mongo:/data/db
    networks:
      - liveoffice_instance

  rabbit:
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - /data/liveoffice/rabbit:/var/lib/rabbitmq
    networks:
      - liveoffice_instance

  web:
    build: ./nginx
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - liveoffice_instance

  livekit-service:
    build:
      context: ../../services/
      dockerfile: ./livekit-service/Dockerfile
      args:
        - LIVEKIT_IP
        - LIVEKIT_API_KEY
        - LIVEKIT_API_SECRET
    restart: unless-stopped
    ports:
      - "7880:7880"
      - "7881:7881"
      - "7882:7882/udp"
      - "6789:6789"
    networks:
      - liveoffice_instance

  meeting-socket-service:
    build:
      context: ../../
      dockerfile: ./services/meeting-socket-service/Dockerfile
    restart: unless-stopped
    ports:
      - '8180:8180'
    environment:
      WAIT_HOSTS: config-service:4000
      WAIT_TIMEOUT: 60000
    networks:
      - liveoffice_instance

  config-service:
    build:
      context: ../../
      dockerfile: ./services/config-service/Dockerfile
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - RABBIT_MQ_MEDIA_SERVER_QUEUE=rabbitMqMediaServerQueue
      - RABBIT_MQ_CORE_QUEUE=rabbitMqCoreQueue
      - RABBIT_MQ_USER=rabbituser
      - RABBIT_MQ_PASS=rabbitpass
      - RABBIT_MQ_HOST=rabbitmq
      - RABBIT_MQ_CORE_HOST=${DEFAULT_SERVER_IP}
      - RABBIT_MQ_CORE_PORT
      - ENVIRONMENT
      - LIVEKIT_API_KEY
      - LIVEKIT_API_SECRET
      - LIVEKIT_HOST
      - DEFAULT_SERVER_IP
    depends_on:
      - mongo
      - rabbit
    networks:
      - liveoffice_instance