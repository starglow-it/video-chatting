version: "3.7"

networks:
  default:
    external:
      name: liveoffice_network
  liveoffice_local:
    name: liveoffice_local

services:
  mongo:
    container_name: liveoffice_mongo
    image: mongo:5.0
    command: [ "--replSet", "rs0", "--bind_ip_all" ]
    hostname: mongo
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo --quiet) -eq 1
      interval: 10s
      start_period: 30s
    restart: always
    volumes:
      - ~/data/liveoffice/mongo:/data/db
    networks:
      - liveoffice_local
    ports:
      - '127.0.0.1:56100:27017'

  rabbit:
    container_name: liveoffice_rabbit
    image: rabbitmq:3.10.7-management
    restart: always
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbituser
      - RABBITMQ_DEFAULT_PASS=rabbitpass
      - RABBITMQ_DEFAULT_HOST=rabbitmq
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbitmq_management path_prefix "/rabbit"
    ports:
      - '5672:5672'
    networks:
      - liveoffice_local

  livekit-service:
    build:
      context: ../../services/
      dockerfile: ./livekit-service/Dockerfile.dev
      args:
        - LIVEKIT_IP=127.0.0.1
    ports:
      - "7880:7880"
      - "7881:7881"
      - "7882:7882/udp"
    restart: always
    networks:
      - liveoffice_local

  frontend-service:
    container_name: liveoffice_frontend
    build:
      context: ../../services/frontend-service
      dockerfile: Dockerfile.dev
      args:
        - VULTR_STORAGE_HOSTNAME=ewr1.vultrobjects.com
    depends_on:
      - gateway-service
    ports:
      - '8000:8000'
    environment:
      - GATEWAY_PORT=3000
      - GATEWAY_HOST=gateway-service
      - FRONTEND_URL=http://localhost:8000
      - TURN_URL=turn.theliveoffice.com
      - TURN_PASSWORD=liveofficeturnpassword
      - TURN_USERNAME=liveofficeturn
      - TURN_PORT=443
      - LIVEKIT_WSS=ws://localhost:7880
      - MEETING_SOCKET_URL=ws://localhost:8180
      - DEFAULT_SERVER_IP=localhost
      - VULTR_STORAGE_HOSTNAME=ewr1.vultrobjects.com
      - STRIPE_PUBLIC_API_KEY=pk_test_51L8KoiAe6q1d3oOzzjO5EvRVIqH2I9bZf9ea2HS8WacaUnI7M0C8i1ZQtufjqWdmpnexm5nDQJOIR6JIPCjefYCw00pNjB9Uss
      - BASE_ENV_DOMAIN=liveoffice.forasoft.com
    volumes:
      - ../../services/frontend-service/pages:/app/pages
      - ../../services/frontend-service/src:/app/src
      - ../../services/frontend-service/public:/app/public
    networks:
      - liveoffice_local

  gateway-service:
    container_name: liveoffice_gateway
    build:
      context: ../../services
      dockerfile: ./gateway-service/Dockerfile.dev
    ports:
      - '3000:3000'
    environment:
      WAIT_HOSTS: config-service:4000
      WAIT_TIMEOUT: 60000
    volumes:
      - ../../services/gateway-service/src:/app/gateway-service/src
      - ../../services/shared:/app/shared
      - /app/gateway-service/dist
    networks:
      - liveoffice_local

  core-service:
    container_name: liveoffice_core
    build:
      context: ../../services
      dockerfile: ./core-service/Dockerfile.dev
    depends_on:
      - config-service
    volumes:
      - ../../services/core-service/src:/app/core-service/src
      - ../../services/shared:/app/shared
      - /app/core-service/dist
      - /app/core-service/images
    networks:
      - liveoffice_local

  auth-service:
    container_name: liveoffice_auth
    build:
      context: ../../services
      dockerfile: ./auth-service/Dockerfile.dev
    depends_on:
      - config-service
    volumes:
      - ../../services/auth-service/src:/app/auth-service/src
      - ../../services/shared:/app/shared
      - /app/auth-service/dist
    networks:
      - liveoffice_local

  notifications-service:
    container_name: liveoffice_notifications
    build:
      context: ../../services
      dockerfile: ./notifications-service/Dockerfile.dev
    depends_on:
      - config-service
    volumes:
      - ../../services/notifications-service:/app/notifications-service
      - ../../services/shared:/app/shared
      - /app/notifications-service/dist
    networks:
      - liveoffice_local

  socket-service:
    container_name: liveoffice_socket
    build:
      context: ../../services
      dockerfile: ./socket-service/Dockerfile.dev
    depends_on:
      - config-service
    ports:
      - "8080:8080"
    environment:
      WAIT_HOSTS: config-service:4000
      WAIT_TIMEOUT: 60000
    volumes:
      - ../../services/socket-service/src:/app/socket-service/src
      - ../../services/shared:/app/shared
      - /app/socket-service/dist
    networks:
      - liveoffice_local

  meeting-socket-service:
    container_name: liveoffice_meeting-socket-service
    build:
      context: ../../services
      dockerfile: ./meeting-socket-service/Dockerfile.dev
    depends_on:
      - config-service
    ports:
      - "8180:8180"
    environment:
      WAIT_HOSTS: config-service:4000
      WAIT_TIMEOUT: 60000
    volumes:
      - ../../services/meeting-socket-service/src:/app/meeting-socket-service/src
      - ../../services/shared:/app/shared
      - /app/meeting-socket-service/dist
    networks:
      - liveoffice_local

  payment-service:
    container_name: liveoffice_payment
    build:
      context: ../../services
      dockerfile: ./payment-service/Dockerfile.dev
    depends_on:
      - config-service
    environment:
      WAIT_HOSTS: config-service:4000
      WAIT_TIMEOUT: 60000
    ports:
      - "5000:5000"
    volumes:
      - ../../services/payment-service/src:/app/payment-service/src
      - ../../services/shared:/app/shared
      - /app/payment-service/dist
    networks:
      - liveoffice_local

  media-server-service:
    container_name: liveoffice_media-server-service
    build:
      context: ../../services/
      dockerfile: ./media-server-service/Dockerfile.dev
    depends_on:
      - config-service
      - livekit-service
    links:
      - livekit-service
    environment:
      WAIT_HOSTS: config-service:4000
      WAIT_TIMEOUT: 60000
    volumes:
      - ../../services/media-server-service/src:/app/media-server-service/src
      - ../../services/shared:/app/shared
      - /app/media-server-service/dist
    networks:
      - liveoffice_local

  scaling-service:
    build:
      context: ../../services
      dockerfile: ./scaling-service/Dockerfile.dev
    depends_on:
      - config-service
    environment:
      WAIT_HOSTS: config-service:4000
      WAIT_TIMEOUT: 60000
    volumes:
      - ../../services/scaling-service/src:/app/scaling-service/src
      - ../../services/shared:/app/shared
      - /app/scaling-service/dist
    networks:
      - liveoffice_local

  config-service:
    container_name: liveoffice_config
    build:
      context: ../../services
      dockerfile: ./config-service/Dockerfile.dev
    environment:
      - RABBIT_MQ_CORE_QUEUE
      - RABBIT_MQ_SOCKET_QUEUE
      - RABBIT_MQ_AUTH_QUEUE
      - RABBIT_MQ_PAYMENT_QUEUE
      - RABBIT_MQ_NOTIFICATIONS_QUEUE
      - RABBIT_MQ_MEDIA_SERVER_QUEUE
      - RABBIT_MQ_SCALING_QUEUE
      - RABBIT_MQ_USER
      - RABBIT_MQ_PASS
      - RABBIT_MQ_HOST
      - RABBIT_MQ_CORE_HOST
      - RABBIT_MQ_CORE_PORT
      - VULTR_UPLOAD_BUCKET
      - VULTR_STORAGE_HOSTNAME
      - VULTR_SECRET_ACCESS_KEY
      - VULTR_ACCESS_KEY
      - VULTR_API_KEY
      - VULTR_SNAPSHOT_ID
      - LIVEKIT_API_KEY
      - LIVEKIT_API_SECRET
      - LIVEKIT_HOST
      - STRIPE_WEBHOOK_SECRET
      - STRIPE_EXPRESS_WEBHOOK_SECRET
      - STRIPE_API_KEY
      - ENVIRONMENT
      - IS_LOCAL
      - PORT
      - NODE_ENV
      - DEFAULT_SERVER_IP
      - DEFAULT_DOMAIN
      - FRONTEND_URL
      - GATEWAY_PORT
      - JWT_SECRET
      - MONGO_URI
      - SMTP_USER
      - SMTP_USER_NAME
      - MANDRILL_API_KEY
      - EMAIL_SERVICE
      - SUPPORT_SCALING
      - NUMBER_OF_ACTIVE_SERVERS
    depends_on:
      - mongo
      - rabbit
    volumes:
      - ../../services/config-service/src:/app/config-service/src
      - ../../services/shared:/app/shared
      - /app/config-service/dist
    networks:
      - liveoffice_local
