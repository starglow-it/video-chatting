version: "3.8"

services:
  traefik:
    build: ./traefik
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "127.0.0.1:8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /data/letsencrypt:/letsencrypt
    networks:
      - traefik

  instance-proxy:
    container_name: instance_proxy
    build:
      context: ../../services/instance-proxy
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "7000:7000"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefikpublic"
      - "traefik.http.routers.proxy.rule=HostRegexp(`{subdomain:.+}.scaling.app.theliveoffice.com`)"
      - "traefik.http.routers.proxy.entrypoints=https"
      - "traefik.http.routers.proxy.tls.certresolver=wildcard-resolver"
      - "traefik.http.routers.proxy.tls.domains[0].main=scaling.app.theliveoffice.com"
      - "traefik.http.routers.proxy.tls.domains[0].sans=*.scaling.app.theliveoffice.com"
      - "traefik.http.services.proxy.loadbalancer.server.port=7000"
      - "io.portainer.accesscontrol.public"
    networks:
      - traefik

  whoami:
    image: "traefik/whoami"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefikpublic"
      - "traefik.http.routers.whoami.rule=(Host(`app.theliveoffice.com`) || Host(`socket.app.theliveoffice.com`)) && PathPrefix(`/whoami`)"
      - "traefik.http.routers.whoami.entrypoints=https"
      - "traefik.http.routers.whoami.tls.certresolver=simple-resolver"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
    networks:
      - traefik

networks:
  traefikpublic:
    name: traefikpublic