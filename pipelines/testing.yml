.staging:
  stage: update
  timeout: 3 hours
  extends:
    - .docker-base
  tags: [liveoffice-deploy]
  only:
    variables:
      - $CI_COMMIT_REF_NAME =~ /^(testing)$/
  except:
    variables:
      - $CLIENT_PUSH_ACTIVE == "true"

Update Test Traefik:
  stage: update_traefik
  extends:
    - .staging
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice -f docker-compose.traefik.yml up -d --build --force-recreate --remove-orphans
  interruptible: true

update:test:
  extends:
    - .staging
  only: [testing]
  stage: update_test
  when: manual
  allow_failure: false
  script:
    - echo "Start update test"

update:staging:test:other:
  extends:
    - .staging
  stage: update_staging_services
  only: [ testing ]
  needs: [ "update:test" ]
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps rabbit mongo livekit-service --force-recreate --remove-orphans

update:staging:test:config:
  extends:
    - .staging
  stage: update_staging_config
  only: [ testing ]
  needs: [ "update:staging:test:other" ]
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps config-service --force-recreate --remove-orphans

update:staging:test:core:
  extends:
    - .staging
  only: [ testing ]
  needs: ["update:staging:test:config"]
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps core-service --force-recreate --remove-orphans

update:staging:test:gateway:
  extends:
    - .staging
  only: [testing]
  needs: [ "update:staging:test:config" ]
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps gateway-service --force-recreate --remove-orphans

update:staging:test:auth:
  extends:
    - .staging
  only: [testing]
  needs: [ "update:staging:test:config" ]
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps auth-service --force-recreate --remove-orphans

update:staging:test:notification:
  extends:
    - .staging
  only: [testing]
  needs: [ "update:staging:test:config" ]
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps notification-service --force-recreate --remove-orphans
#
#update:staging:test:frontend-admin:
#  extends:
#    - .staging
#  needs: [ "update:staging:test:config" ]
#  only: [testing]
#  script:
#    - cd deploy/staging
#    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
#    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps frontend-admin-service --force-recreate --remove-orphans

update:staging:test:frontend:
  extends:
    - .staging
  needs: [ "update:staging:test:config" ]
  only: [testing]
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps frontend-service --force-recreate --remove-orphans

update:staging:test:media-server:
  extends:
    - .staging
  needs: [ "update:staging:test:config" ]
  only: [testing]
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps media-server-service --force-recreate --remove-orphans

update:staging:test:meeting-socket:
  extends:
    - .staging
  needs: [ "update:staging:test:config" ]
  only: [testing]
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps meeting-socket-service --force-recreate --remove-orphans

update:staging:test:payment:
  extends:
    - .staging
  needs: [ "update:staging:test:config" ]
  only: [testing]
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps payment-service --force-recreate --remove-orphans

update:staging:test:scaling:
  extends:
    - .staging
  needs: [ "update:staging:test:config" ]
  only: [testing]
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps scaling-service --force-recreate --remove-orphans

update:staging:test:socket:
  extends:
    - .staging
  needs: [ "update:staging:test:config" ]
  only: [testing]
  script:
    - cd deploy/staging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose --compatibility -p liveoffice_${CI_COMMIT_REF_NAME} -f docker-compose.yml -f docker-compose.${CI_COMMIT_REF_NAME}.yml up -d --build --no-deps socket-service --force-recreate --remove-orphans

